Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: EXTDEFS

    2 EXTDEFS: EXTDEFS EXTDEF
    3        | EXTDEFS STMT
    4        | %empty
    5        | error SEMI

    6 EXTDEF: SPEC DECS SEMI
    7       | SPEC FUNC STMTBLOCK
    8       | SPEC SEMI

    9 SPEC: TYPE
   10     | STSPEC

   11 STSPEC: STRUCT OPTTAG LC DEFS RC
   12       | STRUCT ID

   13 OPTTAG: ID
   14       | %empty

   15 VAR: ID
   16    | VAR LB INT RB
   17    | error RB

   18 FUNC: ID LP PARAS RP
   19     | error RP

   20 PARAS: PARAS COMMA PARA
   21      | PARA
   22      | %empty

   23 PARA: SPEC DEC

   24 STMTBLOCK: LC EXTDEFS RC
   25          | error RC

   26 STMT: EXP SEMI
   27     | STMTBLOCK
   28     | RETURN EXP SEMI
   29     | IF LP EXP RP STMT ESTMT
   30     | FOR LP EXP SEMI EXP SEMI EXP RP STMT
   31     | CONT SEMI
   32     | BREAK SEMI

   33 ESTMT: ELSE STMT
   34      | %empty

   35 DEFS: DEFS DEF
   36     | %empty

   37 DEF: SPEC DECS SEMI
   38    | error SEMI

   39 DECS: DECS COMMA DEC
   40     | DEC

   41 DEC: VAR
   42    | VAR EQUALOP EXP
   43    | VAR EQUALOP LC ARGS RC

   44 EXP: EXP BINARYOP EXP
   45    | UNARYOP EXP
   46    | LP EXP RP
   47    | ID LP ARGS RP
   48    | ID ARRS
   49    | EXP DOT ID ARRS
   50    | INT
   51    | EXP ASSIGNOP EXP
   52    | EXP EQUALOP EXP
   53    | %empty

   54 ARRS: ARRS LB EXP RB
   55     | %empty

   56 ARGS: ARGS COMMA EXP
   57     | EXP


Terminals, with rules where they appear

$end (0) 0
error (256) 5 17 19 25 38
INT (258) 16 50
ID (259) 12 13 15 18 47 48 49
SEMI (260) 5 6 8 26 28 30 31 32 37 38
COMMA (261) 20 39 56
DOT (262) 49
BINARYOP (263) 44
UNARYOP (264) 45
ASSIGNOP (265) 51
EQUALOP (266) 42 43 52
TYPE (267) 9
LP (268) 18 29 30 46 47
RP (269) 18 19 29 30 46 47
LB (270) 16 54
RB (271) 16 17 54
LC (272) 11 24 43
RC (273) 11 24 25 43
STRUCT (274) 11 12
RETURN (275) 28
IF (276) 29
ELSE (277) 33
BREAK (278) 32
CONT (279) 31
FOR (280) 30
LOW (281)
LOW_THAN_ERROR (282)
HIGH_THAN_ERROR (283)


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
PROGRAM (30)
    on left: 1, on right: 0
EXTDEFS (31)
    on left: 2 3 4 5, on right: 1 2 3 24
EXTDEF (32)
    on left: 6 7 8, on right: 2
SPEC (33)
    on left: 9 10, on right: 6 7 8 23 37
STSPEC (34)
    on left: 11 12, on right: 10
OPTTAG (35)
    on left: 13 14, on right: 11
VAR (36)
    on left: 15 16 17, on right: 16 41 42 43
FUNC (37)
    on left: 18 19, on right: 7
PARAS (38)
    on left: 20 21 22, on right: 18 20
PARA (39)
    on left: 23, on right: 20 21
STMTBLOCK (40)
    on left: 24 25, on right: 7 27
STMT (41)
    on left: 26 27 28 29 30 31 32, on right: 3 29 30 33
ESTMT (42)
    on left: 33 34, on right: 29
DEFS (43)
    on left: 35 36, on right: 11 35
DEF (44)
    on left: 37 38, on right: 35
DECS (45)
    on left: 39 40, on right: 6 37 39
DEC (46)
    on left: 41 42 43, on right: 23 39 40
EXP (47)
    on left: 44 45 46 47 48 49 50 51 52 53, on right: 26 28 29 30 42
    44 45 46 49 51 52 54 56 57
ARRS (48)
    on left: 54 55, on right: 48 49 54
ARGS (49)
    on left: 56 57, on right: 43 47 56


State 0

    0 $accept: . PROGRAM $end

    error  shift, and go to state 1

    $end      reduce using rule 4 (EXTDEFS)
    INT       reduce using rule 4 (EXTDEFS)
    ID        reduce using rule 4 (EXTDEFS)
    SEMI      reduce using rule 4 (EXTDEFS)
    DOT       reduce using rule 4 (EXTDEFS)
    BINARYOP  reduce using rule 4 (EXTDEFS)
    UNARYOP   reduce using rule 4 (EXTDEFS)
    ASSIGNOP  reduce using rule 4 (EXTDEFS)
    EQUALOP   reduce using rule 4 (EXTDEFS)
    TYPE      reduce using rule 4 (EXTDEFS)
    LP        reduce using rule 4 (EXTDEFS)
    LC        reduce using rule 4 (EXTDEFS)
    STRUCT    reduce using rule 4 (EXTDEFS)
    RETURN    reduce using rule 4 (EXTDEFS)
    IF        reduce using rule 4 (EXTDEFS)
    BREAK     reduce using rule 4 (EXTDEFS)
    CONT      reduce using rule 4 (EXTDEFS)
    FOR       reduce using rule 4 (EXTDEFS)

    PROGRAM  go to state 2
    EXTDEFS  go to state 3


State 1

    5 EXTDEFS: error . SEMI

    SEMI  shift, and go to state 4


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 5


State 3

    1 PROGRAM: EXTDEFS .
    2 EXTDEFS: EXTDEFS . EXTDEF
    3        | EXTDEFS . STMT

    error    shift, and go to state 6
    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    TYPE     shift, and go to state 10
    LP       shift, and go to state 11
    LC       shift, and go to state 12
    STRUCT   shift, and go to state 13
    RETURN   shift, and go to state 14
    IF       shift, and go to state 15
    BREAK    shift, and go to state 16
    CONT     shift, and go to state 17
    FOR      shift, and go to state 18

    $end      reduce using rule 1 (PROGRAM)
    SEMI      reduce using rule 53 (EXP)
    DOT       reduce using rule 53 (EXP)
    BINARYOP  reduce using rule 53 (EXP)
    ASSIGNOP  reduce using rule 53 (EXP)
    EQUALOP   reduce using rule 53 (EXP)

    EXTDEF     go to state 19
    SPEC       go to state 20
    STSPEC     go to state 21
    STMTBLOCK  go to state 22
    STMT       go to state 23
    EXP        go to state 24


State 4

    5 EXTDEFS: error SEMI .

    $default  reduce using rule 5 (EXTDEFS)


State 5

    0 $accept: PROGRAM $end .

    $default  accept


State 6

   25 STMTBLOCK: error . RC

    RC  shift, and go to state 25


State 7

   50 EXP: INT .

    $default  reduce using rule 50 (EXP)


State 8

   47 EXP: ID . LP ARGS RP
   48    | ID . ARRS

    LP  shift, and go to state 26

    $default  reduce using rule 55 (ARRS)

    ARRS  go to state 27


State 9

   45 EXP: UNARYOP . EXP

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP  go to state 28


State 10

    9 SPEC: TYPE .

    $default  reduce using rule 9 (SPEC)


State 11

   46 EXP: LP . EXP RP

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP  go to state 29


State 12

   24 STMTBLOCK: LC . EXTDEFS RC

    error  shift, and go to state 1

    INT       reduce using rule 4 (EXTDEFS)
    ID        reduce using rule 4 (EXTDEFS)
    SEMI      reduce using rule 4 (EXTDEFS)
    DOT       reduce using rule 4 (EXTDEFS)
    BINARYOP  reduce using rule 4 (EXTDEFS)
    UNARYOP   reduce using rule 4 (EXTDEFS)
    ASSIGNOP  reduce using rule 4 (EXTDEFS)
    EQUALOP   reduce using rule 4 (EXTDEFS)
    TYPE      reduce using rule 4 (EXTDEFS)
    LP        reduce using rule 4 (EXTDEFS)
    LC        reduce using rule 4 (EXTDEFS)
    RC        reduce using rule 4 (EXTDEFS)
    STRUCT    reduce using rule 4 (EXTDEFS)
    RETURN    reduce using rule 4 (EXTDEFS)
    IF        reduce using rule 4 (EXTDEFS)
    BREAK     reduce using rule 4 (EXTDEFS)
    CONT      reduce using rule 4 (EXTDEFS)
    FOR       reduce using rule 4 (EXTDEFS)

    EXTDEFS  go to state 30


State 13

   11 STSPEC: STRUCT . OPTTAG LC DEFS RC
   12       | STRUCT . ID

    ID  shift, and go to state 31

    $default  reduce using rule 14 (OPTTAG)

    OPTTAG  go to state 32


State 14

   28 STMT: RETURN . EXP SEMI

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP  go to state 33


State 15

   29 STMT: IF . LP EXP RP STMT ESTMT

    LP  shift, and go to state 34


State 16

   32 STMT: BREAK . SEMI

    SEMI  shift, and go to state 35


State 17

   31 STMT: CONT . SEMI

    SEMI  shift, and go to state 36


State 18

   30 STMT: FOR . LP EXP SEMI EXP SEMI EXP RP STMT

    LP  shift, and go to state 37


State 19

    2 EXTDEFS: EXTDEFS EXTDEF .

    $default  reduce using rule 2 (EXTDEFS)


State 20

    6 EXTDEF: SPEC . DECS SEMI
    7       | SPEC . FUNC STMTBLOCK
    8       | SPEC . SEMI

    error  shift, and go to state 38
    ID     shift, and go to state 39
    SEMI   shift, and go to state 40

    VAR   go to state 41
    FUNC  go to state 42
    DECS  go to state 43
    DEC   go to state 44


State 21

   10 SPEC: STSPEC .

    $default  reduce using rule 10 (SPEC)


State 22

   27 STMT: STMTBLOCK .

    $default  reduce using rule 27 (STMT)


State 23

    3 EXTDEFS: EXTDEFS STMT .

    $default  reduce using rule 3 (EXTDEFS)


State 24

   26 STMT: EXP . SEMI
   44 EXP: EXP . BINARYOP EXP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP

    SEMI      shift, and go to state 45
    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49


State 25

   25 STMTBLOCK: error RC .

    $default  reduce using rule 25 (STMTBLOCK)


State 26

   47 EXP: ID LP . ARGS RP

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP   go to state 50
    ARGS  go to state 51


State 27

   48 EXP: ID ARRS .
   54 ARRS: ARRS . LB EXP RB

    LB  shift, and go to state 52

    $default  reduce using rule 48 (EXP)


State 28

   44 EXP: EXP . BINARYOP EXP
   45    | UNARYOP EXP .
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP

    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49

    $default  reduce using rule 45 (EXP)


State 29

   44 EXP: EXP . BINARYOP EXP
   46    | LP EXP . RP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP

    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49
    RP        shift, and go to state 53


State 30

    2 EXTDEFS: EXTDEFS . EXTDEF
    3        | EXTDEFS . STMT
   24 STMTBLOCK: LC EXTDEFS . RC

    error    shift, and go to state 6
    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    TYPE     shift, and go to state 10
    LP       shift, and go to state 11
    LC       shift, and go to state 12
    RC       shift, and go to state 54
    STRUCT   shift, and go to state 13
    RETURN   shift, and go to state 14
    IF       shift, and go to state 15
    BREAK    shift, and go to state 16
    CONT     shift, and go to state 17
    FOR      shift, and go to state 18

    SEMI      reduce using rule 53 (EXP)
    DOT       reduce using rule 53 (EXP)
    BINARYOP  reduce using rule 53 (EXP)
    ASSIGNOP  reduce using rule 53 (EXP)
    EQUALOP   reduce using rule 53 (EXP)

    EXTDEF     go to state 19
    SPEC       go to state 20
    STSPEC     go to state 21
    STMTBLOCK  go to state 22
    STMT       go to state 23
    EXP        go to state 24


State 31

   12 STSPEC: STRUCT ID .
   13 OPTTAG: ID .

    LC        reduce using rule 13 (OPTTAG)
    $default  reduce using rule 12 (STSPEC)


State 32

   11 STSPEC: STRUCT OPTTAG . LC DEFS RC

    LC  shift, and go to state 55


State 33

   28 STMT: RETURN EXP . SEMI
   44 EXP: EXP . BINARYOP EXP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP

    SEMI      shift, and go to state 56
    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49


State 34

   29 STMT: IF LP . EXP RP STMT ESTMT

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP  go to state 57


State 35

   32 STMT: BREAK SEMI .

    $default  reduce using rule 32 (STMT)


State 36

   31 STMT: CONT SEMI .

    $default  reduce using rule 31 (STMT)


State 37

   30 STMT: FOR LP . EXP SEMI EXP SEMI EXP RP STMT

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP  go to state 58


State 38

   17 VAR: error . RB
   19 FUNC: error . RP

    RP  shift, and go to state 59
    RB  shift, and go to state 60


State 39

   15 VAR: ID .
   18 FUNC: ID . LP PARAS RP

    LP  shift, and go to state 61

    $default  reduce using rule 15 (VAR)


State 40

    8 EXTDEF: SPEC SEMI .

    $default  reduce using rule 8 (EXTDEF)


State 41

   16 VAR: VAR . LB INT RB
   41 DEC: VAR .
   42    | VAR . EQUALOP EXP
   43    | VAR . EQUALOP LC ARGS RC

    EQUALOP  shift, and go to state 62
    LB       shift, and go to state 63

    $default  reduce using rule 41 (DEC)


State 42

    7 EXTDEF: SPEC FUNC . STMTBLOCK

    error  shift, and go to state 6
    LC     shift, and go to state 12

    STMTBLOCK  go to state 64


State 43

    6 EXTDEF: SPEC DECS . SEMI
   39 DECS: DECS . COMMA DEC

    SEMI   shift, and go to state 65
    COMMA  shift, and go to state 66


State 44

   40 DECS: DEC .

    $default  reduce using rule 40 (DECS)


State 45

   26 STMT: EXP SEMI .

    $default  reduce using rule 26 (STMT)


State 46

   49 EXP: EXP DOT . ID ARRS

    ID  shift, and go to state 67


State 47

   44 EXP: EXP BINARYOP . EXP

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP  go to state 68


State 48

   51 EXP: EXP ASSIGNOP . EXP

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP  go to state 69


State 49

   52 EXP: EXP EQUALOP . EXP

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP  go to state 70


State 50

   44 EXP: EXP . BINARYOP EXP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP
   57 ARGS: EXP .

    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49

    $default  reduce using rule 57 (ARGS)


State 51

   47 EXP: ID LP ARGS . RP
   56 ARGS: ARGS . COMMA EXP

    COMMA  shift, and go to state 71
    RP     shift, and go to state 72


State 52

   54 ARRS: ARRS LB . EXP RB

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP  go to state 73


State 53

   46 EXP: LP EXP RP .

    $default  reduce using rule 46 (EXP)


State 54

   24 STMTBLOCK: LC EXTDEFS RC .

    $default  reduce using rule 24 (STMTBLOCK)


State 55

   11 STSPEC: STRUCT OPTTAG LC . DEFS RC

    $default  reduce using rule 36 (DEFS)

    DEFS  go to state 74


State 56

   28 STMT: RETURN EXP SEMI .

    $default  reduce using rule 28 (STMT)


State 57

   29 STMT: IF LP EXP . RP STMT ESTMT
   44 EXP: EXP . BINARYOP EXP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP

    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49
    RP        shift, and go to state 75


State 58

   30 STMT: FOR LP EXP . SEMI EXP SEMI EXP RP STMT
   44 EXP: EXP . BINARYOP EXP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP

    SEMI      shift, and go to state 76
    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49


State 59

   19 FUNC: error RP .

    $default  reduce using rule 19 (FUNC)


State 60

   17 VAR: error RB .

    $default  reduce using rule 17 (VAR)


State 61

   18 FUNC: ID LP . PARAS RP

    TYPE    shift, and go to state 10
    STRUCT  shift, and go to state 13

    $default  reduce using rule 22 (PARAS)

    SPEC    go to state 77
    STSPEC  go to state 21
    PARAS   go to state 78
    PARA    go to state 79


State 62

   42 DEC: VAR EQUALOP . EXP
   43    | VAR EQUALOP . LC ARGS RC

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11
    LC       shift, and go to state 80

    $default  reduce using rule 53 (EXP)

    EXP  go to state 81


State 63

   16 VAR: VAR LB . INT RB

    INT  shift, and go to state 82


State 64

    7 EXTDEF: SPEC FUNC STMTBLOCK .

    $default  reduce using rule 7 (EXTDEF)


State 65

    6 EXTDEF: SPEC DECS SEMI .

    $default  reduce using rule 6 (EXTDEF)


State 66

   39 DECS: DECS COMMA . DEC

    error  shift, and go to state 83
    ID     shift, and go to state 84

    VAR  go to state 41
    DEC  go to state 85


State 67

   49 EXP: EXP DOT ID . ARRS

    $default  reduce using rule 55 (ARRS)

    ARRS  go to state 86


State 68

   44 EXP: EXP . BINARYOP EXP
   44    | EXP BINARYOP EXP .
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP

    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49

    $default  reduce using rule 44 (EXP)


State 69

   44 EXP: EXP . BINARYOP EXP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   51    | EXP ASSIGNOP EXP .
   52    | EXP . EQUALOP EXP

    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49

    $default  reduce using rule 51 (EXP)


State 70

   44 EXP: EXP . BINARYOP EXP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP
   52    | EXP EQUALOP EXP .

    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49

    $default  reduce using rule 52 (EXP)


State 71

   56 ARGS: ARGS COMMA . EXP

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP  go to state 87


State 72

   47 EXP: ID LP ARGS RP .

    $default  reduce using rule 47 (EXP)


State 73

   44 EXP: EXP . BINARYOP EXP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP
   54 ARRS: ARRS LB EXP . RB

    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49
    RB        shift, and go to state 88


State 74

   11 STSPEC: STRUCT OPTTAG LC DEFS . RC
   35 DEFS: DEFS . DEF

    error   shift, and go to state 89
    TYPE    shift, and go to state 10
    RC      shift, and go to state 90
    STRUCT  shift, and go to state 13

    SPEC    go to state 91
    STSPEC  go to state 21
    DEF     go to state 92


State 75

   29 STMT: IF LP EXP RP . STMT ESTMT

    error    shift, and go to state 6
    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11
    LC       shift, and go to state 12
    RETURN   shift, and go to state 14
    IF       shift, and go to state 15
    BREAK    shift, and go to state 16
    CONT     shift, and go to state 17
    FOR      shift, and go to state 18

    SEMI      reduce using rule 53 (EXP)
    DOT       reduce using rule 53 (EXP)
    BINARYOP  reduce using rule 53 (EXP)
    ASSIGNOP  reduce using rule 53 (EXP)
    EQUALOP   reduce using rule 53 (EXP)

    STMTBLOCK  go to state 22
    STMT       go to state 93
    EXP        go to state 24


State 76

   30 STMT: FOR LP EXP SEMI . EXP SEMI EXP RP STMT

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP  go to state 94


State 77

   23 PARA: SPEC . DEC

    error  shift, and go to state 83
    ID     shift, and go to state 84

    VAR  go to state 41
    DEC  go to state 95


State 78

   18 FUNC: ID LP PARAS . RP
   20 PARAS: PARAS . COMMA PARA

    COMMA  shift, and go to state 96
    RP     shift, and go to state 97


State 79

   21 PARAS: PARA .

    $default  reduce using rule 21 (PARAS)


State 80

   43 DEC: VAR EQUALOP LC . ARGS RC

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP   go to state 50
    ARGS  go to state 98


State 81

   42 DEC: VAR EQUALOP EXP .
   44 EXP: EXP . BINARYOP EXP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP

    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49

    $default  reduce using rule 42 (DEC)


State 82

   16 VAR: VAR LB INT . RB

    RB  shift, and go to state 99


State 83

   17 VAR: error . RB

    RB  shift, and go to state 60


State 84

   15 VAR: ID .

    $default  reduce using rule 15 (VAR)


State 85

   39 DECS: DECS COMMA DEC .

    $default  reduce using rule 39 (DECS)


State 86

   49 EXP: EXP DOT ID ARRS .
   54 ARRS: ARRS . LB EXP RB

    LB  shift, and go to state 52

    $default  reduce using rule 49 (EXP)


State 87

   44 EXP: EXP . BINARYOP EXP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP
   56 ARGS: ARGS COMMA EXP .

    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49

    $default  reduce using rule 56 (ARGS)


State 88

   54 ARRS: ARRS LB EXP RB .

    $default  reduce using rule 54 (ARRS)


State 89

   38 DEF: error . SEMI

    SEMI  shift, and go to state 100


State 90

   11 STSPEC: STRUCT OPTTAG LC DEFS RC .

    $default  reduce using rule 11 (STSPEC)


State 91

   37 DEF: SPEC . DECS SEMI

    error  shift, and go to state 83
    ID     shift, and go to state 84

    VAR   go to state 41
    DECS  go to state 101
    DEC   go to state 44


State 92

   35 DEFS: DEFS DEF .

    $default  reduce using rule 35 (DEFS)


State 93

   29 STMT: IF LP EXP RP STMT . ESTMT

    ELSE  shift, and go to state 102

    $default  reduce using rule 34 (ESTMT)

    ESTMT  go to state 103


State 94

   30 STMT: FOR LP EXP SEMI EXP . SEMI EXP RP STMT
   44 EXP: EXP . BINARYOP EXP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP

    SEMI      shift, and go to state 104
    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49


State 95

   23 PARA: SPEC DEC .

    $default  reduce using rule 23 (PARA)


State 96

   20 PARAS: PARAS COMMA . PARA

    TYPE    shift, and go to state 10
    STRUCT  shift, and go to state 13

    SPEC    go to state 77
    STSPEC  go to state 21
    PARA    go to state 105


State 97

   18 FUNC: ID LP PARAS RP .

    $default  reduce using rule 18 (FUNC)


State 98

   43 DEC: VAR EQUALOP LC ARGS . RC
   56 ARGS: ARGS . COMMA EXP

    COMMA  shift, and go to state 71
    RC     shift, and go to state 106


State 99

   16 VAR: VAR LB INT RB .

    $default  reduce using rule 16 (VAR)


State 100

   38 DEF: error SEMI .

    $default  reduce using rule 38 (DEF)


State 101

   37 DEF: SPEC DECS . SEMI
   39 DECS: DECS . COMMA DEC

    SEMI   shift, and go to state 107
    COMMA  shift, and go to state 66


State 102

   33 ESTMT: ELSE . STMT

    error    shift, and go to state 6
    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11
    LC       shift, and go to state 12
    RETURN   shift, and go to state 14
    IF       shift, and go to state 15
    BREAK    shift, and go to state 16
    CONT     shift, and go to state 17
    FOR      shift, and go to state 18

    SEMI      reduce using rule 53 (EXP)
    DOT       reduce using rule 53 (EXP)
    BINARYOP  reduce using rule 53 (EXP)
    ASSIGNOP  reduce using rule 53 (EXP)
    EQUALOP   reduce using rule 53 (EXP)

    STMTBLOCK  go to state 22
    STMT       go to state 108
    EXP        go to state 24


State 103

   29 STMT: IF LP EXP RP STMT ESTMT .

    $default  reduce using rule 29 (STMT)


State 104

   30 STMT: FOR LP EXP SEMI EXP SEMI . EXP RP STMT

    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11

    $default  reduce using rule 53 (EXP)

    EXP  go to state 109


State 105

   20 PARAS: PARAS COMMA PARA .

    $default  reduce using rule 20 (PARAS)


State 106

   43 DEC: VAR EQUALOP LC ARGS RC .

    $default  reduce using rule 43 (DEC)


State 107

   37 DEF: SPEC DECS SEMI .

    $default  reduce using rule 37 (DEF)


State 108

   33 ESTMT: ELSE STMT .

    $default  reduce using rule 33 (ESTMT)


State 109

   30 STMT: FOR LP EXP SEMI EXP SEMI EXP . RP STMT
   44 EXP: EXP . BINARYOP EXP
   49    | EXP . DOT ID ARRS
   51    | EXP . ASSIGNOP EXP
   52    | EXP . EQUALOP EXP

    DOT       shift, and go to state 46
    BINARYOP  shift, and go to state 47
    ASSIGNOP  shift, and go to state 48
    EQUALOP   shift, and go to state 49
    RP        shift, and go to state 110


State 110

   30 STMT: FOR LP EXP SEMI EXP SEMI EXP RP . STMT

    error    shift, and go to state 6
    INT      shift, and go to state 7
    ID       shift, and go to state 8
    UNARYOP  shift, and go to state 9
    LP       shift, and go to state 11
    LC       shift, and go to state 12
    RETURN   shift, and go to state 14
    IF       shift, and go to state 15
    BREAK    shift, and go to state 16
    CONT     shift, and go to state 17
    FOR      shift, and go to state 18

    SEMI      reduce using rule 53 (EXP)
    DOT       reduce using rule 53 (EXP)
    BINARYOP  reduce using rule 53 (EXP)
    ASSIGNOP  reduce using rule 53 (EXP)
    EQUALOP   reduce using rule 53 (EXP)

    STMTBLOCK  go to state 22
    STMT       go to state 111
    EXP        go to state 24


State 111

   30 STMT: FOR LP EXP SEMI EXP SEMI EXP RP STMT .

    $default  reduce using rule 30 (STMT)
